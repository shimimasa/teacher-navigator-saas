version: '3.8'

services:
  # MongoDB
  mongodb:
    image: mongo:6.0
    container_name: teacher-navigator-mongodb
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-password}
      MONGO_INITDB_DATABASE: teacher-navigator
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - teacher-navigator-network

  # Redis (セッション管理・キャッシュ用)
  redis:
    image: redis:7-alpine
    container_name: teacher-navigator-redis
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD:-redis_password}
    volumes:
      - redis_data:/data
    networks:
      - teacher-navigator-network

  # Node.js Backend
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: teacher-navigator-backend
    restart: always
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      PORT: 5000
      MONGODB_URI: mongodb://${MONGO_ROOT_USERNAME:-admin}:${MONGO_ROOT_PASSWORD:-password}@mongodb:27017/teacher-navigator?authSource=admin
      JWT_SECRET: ${JWT_SECRET}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET}
      JWT_EXPIRE: ${JWT_EXPIRE:-1h}
      JWT_REFRESH_EXPIRE: ${JWT_REFRESH_EXPIRE:-7d}
      REDIS_URL: redis://:${REDIS_PASSWORD:-redis_password}@redis:6379
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      EMAIL_HOST: ${EMAIL_HOST}
      EMAIL_PORT: ${EMAIL_PORT}
      EMAIL_USER: ${EMAIL_USER}
      EMAIL_PASS: ${EMAIL_PASS}
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:3000}
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS:-http://localhost:3000}
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./server:/app
      - /app/node_modules
      - uploads:/app/uploads
    networks:
      - teacher-navigator-network
    command: npm start

  # React Frontend
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
      args:
        VITE_API_URL: ${VITE_API_URL:-http://localhost:5000/api}
        VITE_GOOGLE_CLIENT_ID: ${VITE_GOOGLE_CLIENT_ID}
    container_name: teacher-navigator-frontend
    restart: always
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - teacher-navigator-network

  # Nginx (リバースプロキシ)
  nginx:
    image: nginx:alpine
    container_name: teacher-navigator-nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - frontend
      - backend
    networks:
      - teacher-navigator-network

  # MongoDB Express (開発環境用)
  mongo-express:
    image: mongo-express:latest
    container_name: teacher-navigator-mongo-express
    restart: always
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_ROOT_USERNAME:-admin}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_ROOT_PASSWORD:-password}
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_ROOT_USERNAME:-admin}:${MONGO_ROOT_PASSWORD:-password}@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: ${ME_USERNAME:-admin}
      ME_CONFIG_BASICAUTH_PASSWORD: ${ME_PASSWORD:-admin}
    depends_on:
      - mongodb
    networks:
      - teacher-navigator-network
    profiles:
      - dev

  # Redis Commander (開発環境用)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: teacher-navigator-redis-commander
    restart: always
    ports:
      - "8082:8081"
    environment:
      REDIS_HOSTS: local:redis:6379:0:${REDIS_PASSWORD:-redis_password}
    depends_on:
      - redis
    networks:
      - teacher-navigator-network
    profiles:
      - dev

# ボリューム定義
volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local
  uploads:
    driver: local
  nginx_logs:
    driver: local

# ネットワーク定義
networks:
  teacher-navigator-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# ヘルスチェック設定
healthcheck:
  mongodb:
    test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
    interval: 10s
    timeout: 10s
    retries: 5
    start_period: 40s

  redis:
    test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
    interval: 10s
    timeout: 10s
    retries: 5
    start_period: 30s

  backend:
    test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
    interval: 30s
    timeout: 10s
    retries: 3
    start_period: 40s

  frontend:
    test: ["CMD", "curl", "-f", "http://localhost:80"]
    interval: 30s
    timeout: 10s
    retries: 3
    start_period: 40s